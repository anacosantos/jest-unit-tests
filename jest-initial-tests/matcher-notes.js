[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen, within } from '@testing-library/react';\n\nfunction FormData() {\n  return (\n    <div>\n      <button>Go Back</button>\n      <form aria-label=\"form\">\n      <button>Save</button>\n      <button>Cancel</button>\n      </form>\n    </div>\n  )\n}\nrender(<FormData />);","type":"code","id":"az9bh"},{"content":"function toContainRole(container, role, quantity=1) {\r\n  const elements = within(container).queryAllByRole(role);\r\n\r\n  if(elements.length === quantity) {\r\n    return {\r\n      pass:true\r\n    };\r\n  }\r\n\r\n  return {\r\n    pass: false,\r\n    message: () => `Expected to find ${quantity} ${role} elements. Found ${elements.length} instead.`\r\n  }\r\n}\r\n\r\nexpect.extend({ toContainRole});","type":"code","id":"yy7ws"},{"content":"test('the form displays two buttons into form', () => {\r\n  render(<FormData />);\r\n\r\n  const form = screen.getByRole('form');\r\n  //const buttons = within(form).getAllByRole('button');\r\n\r\n  //for(button of buttons) {\r\n   // expect(button).toBeInTheDocument()\r\n  //}\r\n\r\n  //expect(buttons).toHaveLength(2)\r\n  expect(form).toContainRole('button', 2)\r\n})","type":"code","id":"ifuuj"}]